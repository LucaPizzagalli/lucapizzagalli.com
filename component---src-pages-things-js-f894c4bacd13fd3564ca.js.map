{"version":3,"file":"component---src-pages-things-js-f894c4bacd13fd3564ca.js","mappings":"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","sources":["webpack://luca-pizzagalli-website/./src/components/seo.js","webpack://luca-pizzagalli-website/./src/components/head-tags.js","webpack://luca-pizzagalli-website/./src/components/layout.js","webpack://luca-pizzagalli-website/./src/components/menu.js","webpack://luca-pizzagalli-website/./src/pages/things.js"],"sourcesContent":["import React from \"react\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\n\r\n\r\nfunction Seo({ title, description, pathname }) {\r\n  let data = useStaticQuery(graphql`\r\n    query Seo {\r\n      site {\r\n        siteMetadata {\r\n            siteUrl\r\n            title\r\n            description\r\n            author\r\n        }\r\n      }\r\n    }\r\n  `);\r\n  let { title: defaultTitle, description: defaultDescription, image, siteUrl, } = data.site.siteMetadata;\r\n  let seo = {\r\n    title: title || defaultTitle,\r\n    description: description || defaultDescription,\r\n    image: `${siteUrl}${image}`,\r\n    url: `${siteUrl}${pathname || ``}`,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <title>{seo.title}</title>\r\n      <meta name=\"description\" content={seo.description} />\r\n      <meta name=\"image\" content={seo.image} />\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta name=\"twitter:title\" content={seo.title} />\r\n      <meta name=\"twitter:url\" content={seo.url} />\r\n      <meta name=\"twitter:description\" content={seo.description} />\r\n      <meta name=\"twitter:image\" content={seo.image} />\r\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} />\r\n      <link rel=\"icon\" href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>ðŸ‘¤</text></svg>\" />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default Seo;\r\n","import React from \"react\";\nimport Seo from \"./seo\";\n\n\nfunction HeadTags({ title, description, pathname, children }) {\n  return (\n    <>\n      <Seo title={title} description={description} pathname={pathname}/>\n      {children}\n    </>\n  );\n}\n\n\nexport default HeadTags;\n","import React from 'react';\r\n\r\nimport Menu from \"./menu\";\r\n\r\nimport \"../assets/style/style.css\";\r\nimport \"../assets/style/layout.css\";\r\n\r\n\r\nfunction Layout({ loop, location, children }) {\r\n  return (\r\n    <div className=\"page\">\r\n      <main>{children}</main>\r\n      <Menu loop={loop} location={location} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Layout;\r\n","import { Link } from \"gatsby\";\r\nimport React, { useState } from 'react';\r\n\r\nimport \"../assets/style/menu.css\";\r\n\r\n\r\nlet navigation = [\r\n  {\r\n    title: \"Home\",\r\n    url: \"/\",\r\n    folder: \"\",\r\n  },\r\n  {\r\n    title: \"Things\",\r\n    url: \"/things\",\r\n    folder: \"things\",\r\n  },\r\n  {\r\n    title: \"Words\",\r\n    url: \"/words\",\r\n    folder: \"words\",\r\n  },\r\n  {\r\n    title: \"About\",\r\n    url: \"/about\",\r\n    folder: \"about\",\r\n  }\r\n];\r\n\r\n\r\nfunction Menu({ location, loop = false, foldable = false, menuTheme=\"\" }) {\r\n  let [isHidden, setIsHidden] = useState(foldable);\r\n\r\n  let folder = location.split('/')[1];\r\n\r\n\r\n  if (loop && loop.level === 36)\r\n    return (\r\n      <div className=\"website-menu\">\r\n        <menu>\r\n          {navigation.map(element => (\r\n            <li key={element.url}>\r\n              <Link to=\"/the-void\">\r\n                {element.title}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </menu>\r\n      </div>\r\n    );\r\n\r\n  if (loop && loop.level > 0)\r\n    return (\r\n      <div className=\"website-menu\">\r\n        <menu>\r\n          {navigation.map(element => (\r\n            <li key={element.url}>\r\n              <a href={() => false} onClick={() => { loop.setUrl(element.url); }}\r\n                style={element.folder === folder ?\r\n                  { cursor: 'pointer', color: \"var(--highlight-color)\" }\r\n                  :\r\n                  { cursor: 'pointer' }}\r\n              >\r\n                {element.title}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </menu>\r\n      </div>\r\n    );\r\n\r\n  if (foldable)\r\n    return (\r\n      <div key={isHidden}\r\n        className={menuTheme + ' website-menu-wrapper ' + (isHidden ? 'reverse' : '')} >\r\n        <div className=\"website-menu sliding-text-wrapper\">\r\n          <menu className=\"sliding-text\">\r\n            {navigation.map(element => (\r\n              <li key={element.url}>\r\n                <Link to={element.url}\r\n                  style={element.folder === folder ? { color: \"inherit\" } : {}}\r\n                >\r\n                  {element.title}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </menu>\r\n        </div>\r\n        <button className=\"menu-circle\"\r\n            onClick={() => setIsHidden(false)}>\r\n          <div className=\"menu-half-circle-wrapper\"\r\n            style={{ clipPath: \"inset(0 50% 0 0)\" }}>\r\n            <div className=\"menu-half-circle left-animated\"\r\n              style={{ animationName: \"animation-circle-left\" }} />\r\n          </div>\r\n          <div className=\"menu-half-circle-wrapper\"\r\n            style={{ clipPath: \"inset(0 0 0 50%)\" }}>\r\n            <div className=\"menu-half-circle right-animated\"\r\n              style={{ animationName: \"animation-circle-right\" }} />\r\n          </div>\r\n        </button>\r\n        <button className=\"menu-line\" onClick={() => setIsHidden(true)}>\r\n          <div className=\"menu-inner-line\" />\r\n          <span hidden>Close Menu</span>\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className=\"website-menu\">\r\n      <menu>\r\n        {navigation.map(element => (\r\n          <li key={element.url}>\r\n            <Link to={element.url}\r\n              style={element.folder === folder ? { color: \"var(--highlight-color)\" } : {}}\r\n            >\r\n              {element.title}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </menu>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { graphql, useStaticQuery, Link } from \"gatsby\";\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport HeadTags from \"../components/head-tags\";\r\n\r\n\r\nfunction ProjectCard({ loop, data }) {\r\n  let image = getImage(data.previewImage);\r\n  return (\r\n    <section className=\"card\">\r\n      {data.url === \"nope\" ?\r\n        loop ?\r\n          <a href={() => false} onClick={() => loop.setUrl(\"/loop\")}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <GatsbyImage image={image} alt={data.altText} style={{ marginBottom: \"2rem\" }} />\r\n            <h2 className=\"internal-text\"> {data.coverTitle} </h2>\r\n          </a>\r\n          :\r\n          <Link to={\"/loop\"}>\r\n            <GatsbyImage image={image} alt={data.altText} style={{ marginBottom: \"2rem\" }} />\r\n            <h2 className=\"internal-text\"> {data.coverTitle} </h2>\r\n          </Link>\r\n        :\r\n        data.staticLink ?\r\n          <a href={data.url}>\r\n            <GatsbyImage image={image} alt={data.altText} style={{ marginBottom: \"2rem\" }} />\r\n            <h2 className=\"internal-text\"> {data.coverTitle} </h2>\r\n          </a>\r\n          :\r\n          <Link to={data.url}>\r\n            <GatsbyImage image={image} alt={data.altText} style={{ marginBottom: \"2rem\" }} />\r\n            <h2 className=\"internal-text\"> {data.coverTitle} </h2>\r\n          </Link>\r\n      }\r\n      <p className=\"internal-text\" style={{ flexGrow: 1 }}>{data.excerpt}</p>\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\", alignItems: \"center\" }}>\r\n        {data.technologies.map(tech => (<div key={tech} className=\"chip\" >{tech}</div>))}\r\n        <div key=\"empty\" style={{ flexGrow: 1 }}></div>\r\n        {data.github &&\r\n          <a key=\"github\" href={data.github} style={{ margin: \"1rem\" }} >GitHub</a>\r\n        }\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\n\r\nfunction ThingsPage({ loop }) {\r\n  let data = useStaticQuery(graphql`\r\n  query ProjectList {\r\n    allMarkdownRemark(\r\n      filter: {fileAbsolutePath: {regex: \"/(things)/\"  }}\r\n      sort: {frontmatter: {order: DESC}}\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            url\r\n            coverTitle\r\n            order\r\n            previewImage {\r\n              childImageSharp {\r\n                gatsbyImageData(\r\n                  layout: FULL_WIDTH\r\n                )\r\n              }\r\n            }\r\n            altText\r\n            staticLink\r\n            excerpt\r\n            technologies\r\n            github\r\n          }\r\n        }\r\n      }\r\n    } \r\n  }\r\n`)\r\n\r\n  return (\r\n    <Layout loop={loop} location=\"/things\">\r\n      <h1>My projects</h1>\r\n      <p>Some of the projects for which I have a nice pic.</p>\r\n      <div className=\"grid\" style={loop && loop.level > 8 ? { margin: \"0rem\" } : {}}>\r\n        {data.allMarkdownRemark.edges.map(edge => {\r\n          let { frontmatter } = edge.node;\r\n          return (\r\n            <div key={frontmatter.url} className=\"grid-item\"\r\n              style={loop && loop.level > 8 ? { width: \"100%\" } : {}}\r\n            >\r\n              <ProjectCard loop={loop} data={frontmatter} />\r\n            </div>\r\n          )\r\n        })\r\n        }\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\n\r\nexport function Head(){\r\n  return <HeadTags title=\"Things\" description=\"\" />;\r\n}\r\nexport default ThingsPage;\r\n"],"names":["_ref","title","description","pathname","data","useStaticQuery","defaultTitle","defaultDescription","image","siteUrl","site","siteMetadata","seo","url","React","name","content","twitterUsername","rel","href","children","Seo","loop","location","className","Menu","navigation","folder","foldable","menuTheme","isHidden","setIsHidden","useState","split","level","map","element","key","Link","to","onClick","setUrl","style","cursor","color","clipPath","animationName","hidden","ProjectCard","getImage","previewImage","GatsbyImage","alt","altText","marginBottom","coverTitle","staticLink","flexGrow","excerpt","display","flexWrap","alignItems","technologies","tech","github","margin","Head","HeadTags","_ref2","Layout","allMarkdownRemark","edges","edge","frontmatter","node","width"],"sourceRoot":""}