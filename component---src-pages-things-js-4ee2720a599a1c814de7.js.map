{"version":3,"file":"component---src-pages-things-js-4ee2720a599a1c814de7.js","mappings":"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","sources":["webpack://luca-pizzagalli-website/./src/components/layout.js","webpack://luca-pizzagalli-website/./src/pages/things.js","webpack://luca-pizzagalli-website/./src/components/seo.js","webpack://luca-pizzagalli-website/./src/components/head-tags.js","webpack://luca-pizzagalli-website/./src/components/menu.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport Menu from \"./menu\";\r\n\r\nimport \"../assets/style/style.css\";\r\nimport \"../assets/style/layout.css\";\r\n\r\n\r\nfunction Layout({ loop, location, children }) {\r\n  return (\r\n    <div className=\"page\">\r\n      <main>{children}</main>\r\n      <Menu loop={loop} location={location} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { graphql, useStaticQuery, Link } from \"gatsby\";\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport HeadTags from \"../components/head-tags\";\r\n\r\n\r\nfunction ProjectCard({ loop, data }) {\r\n  let image = getImage(data.previewImage);\r\n  return (\r\n    <section className=\"card\">\r\n      {data.url === \"nope\" ?\r\n        loop ?\r\n          <a href={() => false} onClick={() => loop.setUrl(\"/loop\")}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <GatsbyImage image={image} alt={data.altText} style={{ marginBottom: \"2rem\" }} />\r\n            <h2 className=\"internal-text\"> {data.coverTitle} </h2>\r\n          </a>\r\n          :\r\n          <Link to={\"/loop\"}>\r\n            <GatsbyImage image={image} alt={data.altText} style={{ marginBottom: \"2rem\" }} />\r\n            <h2 className=\"internal-text\"> {data.coverTitle} </h2>\r\n          </Link>\r\n        :\r\n        data.staticLink ?\r\n          <a href={data.url}>\r\n            <GatsbyImage image={image} alt={data.altText} style={{ marginBottom: \"2rem\" }} />\r\n            <h2 className=\"internal-text\"> {data.coverTitle} </h2>\r\n          </a>\r\n          :\r\n          <Link to={data.url}>\r\n            <GatsbyImage image={image} alt={data.altText} style={{ marginBottom: \"2rem\" }} />\r\n            <h2 className=\"internal-text\"> {data.coverTitle} </h2>\r\n          </Link>\r\n      }\r\n      <p className=\"internal-text\" style={{ flexGrow: 1 }}>{data.excerpt}</p>\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\", alignItems: \"center\" }}>\r\n        {data.technologies.map(tech => (<div key={tech} className=\"chip\" >{tech}</div>))}\r\n        <div key=\"empty\" style={{ flexGrow: 1 }}></div>\r\n        {data.github &&\r\n          <a key=\"github\" href={data.github} style={{ margin: \"1rem\" }} >GitHub</a>\r\n        }\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\n\r\nfunction ThingsPage({ loop }) {\r\n  let data = useStaticQuery(graphql`\r\n  query ProjectList {\r\n    allMarkdownRemark(\r\n      filter: {fileAbsolutePath: {regex: \"/(things)/\"  }}\r\n      sort: {frontmatter: {order: DESC}}\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            url\r\n            coverTitle\r\n            order\r\n            previewImage {\r\n              childImageSharp {\r\n                gatsbyImageData(\r\n                  layout: FULL_WIDTH\r\n                )\r\n              }\r\n            }\r\n            altText\r\n            staticLink\r\n            excerpt\r\n            technologies\r\n            github\r\n          }\r\n        }\r\n      }\r\n    } \r\n  }\r\n`)\r\n\r\n  return (\r\n    <Layout loop={loop} location=\"/things\">\r\n      <h1>My projects</h1>\r\n      <p>Some of the projects for which I have a nice pic.</p>\r\n      <div className=\"grid\" style={loop && loop.level > 8 ? { margin: \"0rem\" } : {}}>\r\n        {data.allMarkdownRemark.edges.map(edge => {\r\n          let { frontmatter } = edge.node;\r\n          return (\r\n            <div key={frontmatter.url} className=\"grid-item\"\r\n              style={loop && loop.level > 8 ? { width: \"100%\" } : {}}\r\n            >\r\n              <ProjectCard loop={loop} data={frontmatter} />\r\n            </div>\r\n          )\r\n        })\r\n        }\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\n\r\nexport function Head(){\r\n  return <HeadTags title=\"Things\" description=\"\" />;\r\n}\r\nexport default ThingsPage;\r\n","import React from \"react\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\n\r\n\r\nfunction Seo({ title, description, pathname }) {\r\n  let data = useStaticQuery(graphql`\r\n    query Seo {\r\n      site {\r\n        siteMetadata {\r\n            siteUrl\r\n            title\r\n            description\r\n            author\r\n        }\r\n      }\r\n    }\r\n  `);\r\n  let { title: defaultTitle, description: defaultDescription, image, siteUrl, } = data.site.siteMetadata;\r\n  let seo = {\r\n    title: title || defaultTitle,\r\n    description: description || defaultDescription,\r\n    image: `${siteUrl}${image}`,\r\n    url: `${siteUrl}${pathname || ``}`,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <title>{seo.title}</title>\r\n      <meta name=\"description\" content={seo.description} />\r\n      <meta name=\"image\" content={seo.image} />\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta name=\"twitter:title\" content={seo.title} />\r\n      <meta name=\"twitter:url\" content={seo.url} />\r\n      <meta name=\"twitter:description\" content={seo.description} />\r\n      <meta name=\"twitter:image\" content={seo.image} />\r\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} />\r\n      {/* <link rel=\"icon\" href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>👤</text></svg>\" /> */}\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default Seo;\r\n","import React from \"react\";\nimport Seo from \"./seo\";\n\n\nfunction HeadTags({ title, description, pathname, children }) {\n  return (\n    <>\n      <Seo title={title} description={description} pathname={pathname}/>\n      {children}\n    </>\n  );\n}\n\n\nexport default HeadTags;\n","import { Link } from \"gatsby\";\r\nimport React, { useState } from 'react';\r\n\r\nimport \"../assets/style/menu.css\";\r\n\r\n\r\nlet navigation = [\r\n  {\r\n    title: \"Home\",\r\n    url: \"/\",\r\n    folder: \"\",\r\n  },\r\n  {\r\n    title: \"Things\",\r\n    url: \"/things\",\r\n    folder: \"things\",\r\n  },\r\n  {\r\n    title: \"Words\",\r\n    url: \"/words\",\r\n    folder: \"words\",\r\n  },\r\n  {\r\n    title: \"About\",\r\n    url: \"/about\",\r\n    folder: \"about\",\r\n  }\r\n];\r\n\r\n\r\nfunction Menu({ location, loop = false, foldable = false, menuTheme=\"\" }) {\r\n  let [isHidden, setIsHidden] = useState(foldable);\r\n\r\n  let folder = location.split('/')[1];\r\n\r\n\r\n  if (loop && loop.level === 36)\r\n    return (\r\n      <div className=\"website-menu\">\r\n        <menu>\r\n          {navigation.map(element => (\r\n            <li key={element.url}>\r\n              <Link to=\"/the-void\">\r\n                {element.title}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </menu>\r\n      </div>\r\n    );\r\n\r\n  if (loop && loop.level > 0)\r\n    return (\r\n      <div className=\"website-menu\">\r\n        <menu>\r\n          {navigation.map(element => (\r\n            <li key={element.url}>\r\n              <a href={() => false} onClick={() => { loop.setUrl(element.url); }}\r\n                style={element.folder === folder ?\r\n                  { cursor: 'pointer', color: \"var(--highlight-color)\" }\r\n                  :\r\n                  { cursor: 'pointer' }}\r\n              >\r\n                {element.title}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </menu>\r\n      </div>\r\n    );\r\n\r\n  if (foldable)\r\n    return (\r\n      <div key={isHidden}\r\n        className={menuTheme + ' website-menu-wrapper ' + (isHidden ? 'reverse' : '')} >\r\n        <div className=\"website-menu sliding-text-wrapper\">\r\n          <menu className=\"sliding-text\">\r\n            {navigation.map(element => (\r\n              <li key={element.url}>\r\n                <Link to={element.url}\r\n                  style={element.folder === folder ? { color: \"inherit\" } : {}}\r\n                >\r\n                  {element.title}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </menu>\r\n        </div>\r\n        <button className=\"menu-circle column\"\r\n            onClick={() => setIsHidden(false)}>\r\n          <div className=\"menu-inner-circle\" />\r\n          <div className=\"menu-half-circle-wrapper\"\r\n            style={{ clipPath: \"inset(0 50% 0 0)\" }}>\r\n            <div className=\"menu-half-circle left-animated\"\r\n              style={{ animationName: \"animation-circle-left\" }} />\r\n          </div>\r\n          <div className=\"menu-half-circle-wrapper\"\r\n            style={{ clipPath: \"inset(0 0 0 50%)\" }}>\r\n            <div className=\"menu-half-circle right-animated\"\r\n              style={{ animationName: \"animation-circle-right\" }} />\r\n          </div>\r\n        </button>\r\n        <button className=\"menu-line column\" onClick={() => setIsHidden(true)}>\r\n          <div className=\"menu-inner-line\" />\r\n          <span hidden>Close Menu</span>\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className=\"website-menu\">\r\n      <menu>\r\n        {navigation.map(element => (\r\n          <li key={element.url}>\r\n            <Link to={element.url}\r\n              style={element.folder === folder ? { color: \"var(--highlight-color)\" } : {}}\r\n            >\r\n              {element.title}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </menu>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Menu;\r\n"],"names":["_ref","loop","location","children","React","className","Menu","ProjectCard","data","image","getImage","previewImage","url","href","onClick","setUrl","style","cursor","GatsbyImage","alt","altText","marginBottom","coverTitle","Link","to","staticLink","flexGrow","excerpt","display","flexWrap","alignItems","technologies","map","tech","key","github","margin","Head","HeadTags","title","description","_ref2","useStaticQuery","Layout","level","allMarkdownRemark","edges","edge","frontmatter","node","width","pathname","defaultTitle","defaultDescription","siteUrl","site","siteMetadata","seo","name","content","twitterUsername","Seo","navigation","folder","foldable","menuTheme","isHidden","setIsHidden","useState","split","element","color","clipPath","animationName","hidden"],"sourceRoot":""}