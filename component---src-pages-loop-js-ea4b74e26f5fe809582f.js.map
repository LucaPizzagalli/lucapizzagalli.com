{"version":3,"file":"component---src-pages-loop-js-ea4b74e26f5fe809582f.js","mappings":"yLAoBA,UAfA,YAA8B,IAATA,EAAQ,EAARA,KACjB,OACI,gBAAC,IAAD,CAAQA,KAAMA,EAAMC,SAAS,UACzB,gBAAC,IAAD,CAAKC,MAAM,WAAWC,YAAY,GAAGC,KAAK,KAAKC,KAAM,KACrD,sCACA,uBAAKC,MAAO,CAAEC,QAAS,OAAQC,SAAU,OAAQC,eAAgB,eAAgBC,OAAQ,mBAAoBC,MAAO,OAAQC,SAAU,UAClI,qBAAGC,KAAK,gCAAgCC,OAAO,UAA/C,cACA,qBAAGD,KAAK,+CAAR,YACA,qBAAGA,KAAK,qCAAR,WAEJ,qBAAGE,UAAU,aAAb,6BAAmD,qBAAGF,KAAK,kCAAR,2BAAnD,KAGX,C,yECXD,SAASG,IACL,OACI,gBAAC,EAAAC,YAAD,CACIC,MAAK,aAkBLC,OAAQ,SAAAC,GAAI,OACR,0BACKA,EAAKC,kBAAkBC,MAAMC,KAAI,SAAAC,GAC9B,IAAMC,EAAgBD,EAAKE,KAArBD,YACN,OACI,sBAAIE,IAAKF,EAAYG,KACjB,gBAAC,EAAAC,KAAD,CAAMC,GAAIL,EAAYG,KAAMH,EAAYvB,OAGnD,IATG,GAcvB,CAcD,UAXA,YAA6B,IAATF,EAAQ,EAARA,KAChB,OACI,gBAAC,IAAD,CAAQA,KAAMA,EAAMC,SAAS,SACzB,gBAAC,IAAD,CAAKC,MAAM,OAAOC,YAAY,GAAGC,KAAK,KAAKC,KAAM,KACjD,kCACA,qBAAGU,UAAU,aAAb,iDACA,gBAACC,EAAD,MAGX,C,+DCzBD,UAtBA,YAA8B,IAAThB,EAAQ,EAARA,KACjB,OACI,gBAAC,IAAD,CAAQA,KAAMA,EAAMC,SAAS,KACzB,gBAAC,IAAD,CAAKC,MAAM,kBAAkBC,YAAY,GAAGC,KAAK,KAAKC,KAAM,KAC5D,oCACA,2BACI,2BACI,qBAAGU,UAAU,aAAb,aACA,qBAAGA,UAAU,aAAb,6GAC8G,sBAAIT,MAAO,CAAEyB,eAAgB,iBAA7B,yBAD9G,IACwL,+CADxL,cAEa,8CAFb,0CAEiF,sBAAIzB,MAAO,CAAEyB,eAAgB,iBAA7B,aAFjF,IAE+I,wCAF/I,cAIJ,6BAQf,C,8FCnBGC,EAAQ,CACR,qEACA,2BACA,mCACA,oBACA,MACA,MACA,qBACA,SACA,MACA,MACA,oEACA,QACA,mCACA,MACA,4EACA,qCACA,MACA,iCACA,WACA,MACA,MACA,OAGJ,SAASC,EAAT,GAA6B,IAATjC,EAAQ,EAARA,KAChB,GAAsBkC,EAAAA,EAAAA,UAAS,gBAAC,UAAD,OAA1BC,EAAL,KAAWC,EAAX,KAcIC,EAAY,CAAEC,MAAOtC,EAAKsC,MAAQ,EAAGC,OAZ5B,SAACX,GACE,MAARA,EACAQ,EAAQ,gBAAC,UAAD,OACK,cAARR,EACLQ,EAAQ,gBAAC,UAAD,OACK,WAARR,EACLQ,EAAQ,gBAAC,UAAD,OACK,UAARR,EACLQ,EAAQ,gBAAC,UAAD,OACK,UAARR,GACLQ,EAAQ,gBAACH,EAAD,MACf,GAGD,OACI,gBAAC,IAAD,CAAQjC,KAAMA,EAAMC,SAAS,SACzB,wCACA,qBAAGc,UAAU,aAAaiB,EAAMhC,EAAKsC,MAAQN,EAAMQ,SACnD,uBAAKlC,MAAO,CAAEmC,OAAQ,sBAEdC,EAAAA,aAAmBP,EAAM,CAAEnC,KAAMqC,KAKpD,CAEDJ,EAASU,aAAe,CACpB3C,KAAM,CAAEsC,MAAO,IAGnB,W","sources":["webpack://luca-pizzagalli-website/./src/pages/about.js","webpack://luca-pizzagalli-website/./src/pages/blog.js","webpack://luca-pizzagalli-website/./src/pages/index.js","webpack://luca-pizzagalli-website/./src/pages/loop.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport Seo from \"../components/seo\";\r\n\r\nfunction AboutPage({ loop }) {\r\n    return (\r\n        <Layout loop={loop} location=\"/about\">\r\n            <Seo title=\"Contacts\" description=\"\" lang=\"en\" meta={[]} />\r\n            <h1>About me</h1>\r\n            <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-around\", margin: \"0 auto 8rem auto\", width: \"100%\", maxWidth: \"48rem\" }}>\r\n                <a href=\"/curriculumLucaPizzagalli.pdf\" target=\"_blank\" >Curriculum</a>\r\n                <a href=\"https://www.linkedin.com/in/luca-pizzagalli\" >LinkedIn</a>\r\n                <a href=\"https://github.com/LucaPizzagalli\" >GitHub</a>\r\n            </div>\r\n            <p className=\"main-text\">Or, you can contact me at <a href=\"mailto:mail@lucapizzagalli.com\">mail@lucapizzagalli.com</a>.</p>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default AboutPage\r\n","import React from \"react\";\r\nimport { graphql, StaticQuery, Link } from 'gatsby'\r\n\r\nimport Layout from \"../components/layout\";\r\nimport Seo from \"../components/seo\";\r\n\r\n\r\nfunction PostList() {\r\n    return (\r\n        <StaticQuery\r\n            query={graphql`\r\n            query PostList {\r\n              allMarkdownRemark(\r\n                filter: {fileAbsolutePath: {regex: \"/(blog)/\"  }}\r\n                sort: {order: DESC, fields: [frontmatter___date]}\r\n              ) {\r\n                edges {\r\n                  node {\r\n                    frontmatter {\r\n                      url\r\n                      date\r\n                      title\r\n                    }\r\n                  }\r\n                }\r\n              } \r\n            }\r\n          `}\r\n            render={data => (\r\n                <ul>\r\n                    {data.allMarkdownRemark.edges.map(edge => {\r\n                        let { frontmatter } = edge.node;\r\n                        return (\r\n                            <li key={frontmatter.url}>\r\n                                <Link to={frontmatter.url}>{frontmatter.title}</Link>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nfunction BlogPage({ loop }) {\r\n    return (\r\n        <Layout loop={loop} location=\"/blog\">\r\n            <Seo title=\"Blog\" description=\"\" lang=\"en\" meta={[]} />\r\n            <h1>Blog</h1>\r\n            <p className=\"main-text\">I wrote something once. Let's call it a blog.</p>\r\n            <PostList />\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default BlogPage\r\n","import React from \"react\";\r\n// import { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nimport Layout from \"../components/layout\";\r\nimport Seo from \"../components/seo\";\r\n\r\n\r\nfunction IndexPage({ loop }) {\r\n    return (\r\n        <Layout loop={loop} location=\"/\">\r\n            <Seo title=\"Luca Pizzagalli\" description=\"\" lang=\"en\" meta={[]} />\r\n            <h1>Hello.</h1>\r\n            <div>\r\n                <div>\r\n                    <p className=\"main-text\">I'm Luca.</p>\r\n                    <p className=\"main-text\">\r\n                        The place you are now in is the website I put together in a bunch of days for declaring to the world that <em style={{ textDecoration: \"line-through\" }}>I'm looking for a job</em> <strong>I found a job</strong>.\r\n                        A job in <strong>data science</strong>, or something related. Every place in <em style={{ textDecoration: \"line-through\" }}>the world</em> <strong>Berlin</strong> is fine.</p>\r\n                </div>\r\n                <div>\r\n                    {/* <div style={{ maxWidth: '300px', margin: '0 auto' }}>\r\n                        <StaticImage src=\"../images/me.png\" alt=\"me\" />\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default IndexPage\r\n","import React, { useState } from 'react';\r\n\r\nimport Layout from \"../components/layout\";\r\nimport IndexPage from \"./index\";\r\nimport ProjectsPage from \"./projects\";\r\nimport AboutPage from \"./about\";\r\nimport BlogPage from \"./blog\";\r\n\r\nlet texts = [\r\n    \"Well, you are already seeing my website, anyway, here it is again.\",\r\n    \"Mmm... Sure, same stuff.\",\r\n    \"Yeah, it works, it just goes on.\",\r\n    \"Yup, nothing new.\",\r\n    \"...\",\r\n    \"...\",\r\n    \"Hey... still here.\",\r\n    \"I see.\",\r\n    \"...\",\r\n    \"...\",\r\n    \"You won, there is nothing more. You can stop now, congratulation!\",\r\n    \"Damn.\",\r\n    \"You're a stubborn one, you know?\",\r\n    \"...\",\r\n    \"Actually, if you now watch outside the screen you'll see something weird.\",\r\n    \"Did you see it? yep, pretty weird.\",\r\n    \"...\",\r\n    \"Thanks for keeping me company.\",\r\n    \"The end.\",\r\n    \"...\",\r\n    \"...\",\r\n    \"...\",\r\n]\r\n\r\nfunction LoopPage({ loop }) {\r\n    let [page, setPage] = useState(<IndexPage />);\r\n\r\n    let setUrl = (url) => {\r\n        if (url === \"/\")\r\n            setPage(<IndexPage />);\r\n        else if (url === \"/projects\")\r\n            setPage(<ProjectsPage />);\r\n        else if (url === \"/about\")\r\n            setPage(<AboutPage />);\r\n        else if (url === \"/blog\")\r\n            setPage(<BlogPage />);\r\n        else if (url === \"/loop\")\r\n            setPage(<LoopPage />);\r\n    }\r\n    let next_loop = { level: loop.level + 1, setUrl: setUrl };\r\n\r\n    return (\r\n        <Layout loop={loop} location=\"/loop\">\r\n            <h1>My website</h1>\r\n            <p className=\"main-text\">{texts[loop.level % texts.length]}</p>\r\n            <div style={{ border: \"3px solid #01ff70\" }}>\r\n                {\r\n                    React.cloneElement(page, { loop: next_loop })\r\n                }\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nLoopPage.defaultProps = {\r\n    loop: { level: 0 }\r\n}\r\n\r\nexport default LoopPage\r\n"],"names":["loop","location","title","description","lang","meta","style","display","flexWrap","justifyContent","margin","width","maxWidth","href","target","className","PostList","StaticQuery","query","render","data","allMarkdownRemark","edges","map","edge","frontmatter","node","key","url","Link","to","textDecoration","texts","LoopPage","useState","page","setPage","next_loop","level","setUrl","length","border","React","defaultProps"],"sourceRoot":""}