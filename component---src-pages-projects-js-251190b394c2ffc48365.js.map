{"version":3,"file":"component---src-pages-projects-js-251190b394c2ffc48365.js","mappings":"mMAQA,SAASA,EAAT,GAAsC,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACrBC,GAAQC,EAAAA,EAAAA,GAASF,EAAKG,cAC1B,OACI,uBAAKC,UAAU,QACG,SAAbJ,EAAKK,IACFN,EACI,uBAAKO,QAAS,kBAAMP,EAAKQ,OAAO,QAAlB,EACVC,MAAO,CAAEC,eAAgB,YAAaC,MAAO,UAAWC,OAAQ,YAEhE,gBAAC,EAAAC,EAAD,CAAaX,MAAOA,EAAOY,IAAKb,EAAKc,UACrC,sBAAIV,UAAU,cAAd,IAA6BJ,EAAKe,MAAlC,MAGJ,gBAAC,EAAAC,KAAD,CAAMC,GAAI,SACN,gBAAC,EAAAL,EAAD,CAAaX,MAAOA,EAAOY,IAAKb,EAAKc,UACrC,sBAAIV,UAAU,cAAd,IAA6BJ,EAAKe,MAAlC,MAGRf,EAAKkB,WACD,qBAAGC,KAAMnB,EAAKK,KACV,gBAAC,EAAAO,EAAD,CAAaX,MAAOA,EAAOY,IAAKb,EAAKc,UACrC,sBAAIV,UAAU,cAAd,IAA6BJ,EAAKe,MAAlC,MAGJ,gBAAC,EAAAC,KAAD,CAAMC,GAAIjB,EAAKK,KACX,gBAAC,EAAAO,EAAD,CAAaX,MAAOA,EAAOY,IAAKb,EAAKc,UACrC,sBAAIV,UAAU,cAAd,IAA6BJ,EAAKe,MAAlC,MAGZ,qBAAGP,MAAO,CAAEY,SAAU,IAAMpB,EAAKqB,SACjC,uBAAKb,MAAO,CAAEc,QAAS,OAAQC,SAAU,OAAQC,WAAY,WACxDxB,EAAKyB,aAAaC,KAAI,SAAAC,GAAI,OAAK,uBAAKC,IAAKD,EAAMvB,UAAU,QAASuB,EAAxC,IAC3B,uBAAKC,IAAI,QAAQpB,MAAO,CAAEY,SAAU,KACnCpB,EAAK6B,QACF,qBAAGD,IAAI,SAAST,KAAMnB,EAAK6B,OAAQrB,MAAO,CAAEsB,OAAQ,SAApD,WAKnB,CA4DD,UAzDA,YAAiC,IAAT/B,EAAQ,EAARA,KACpB,OACI,gBAAC,IAAD,CAAQA,KAAMA,EAAMgC,SAAS,aACzB,gBAAC,IAAD,CAAKhB,MAAM,WAAWiB,YAAY,GAAGC,KAAK,KAAKC,KAAM,KACrD,yCACA,8EACA,uBAAK9B,UAAU,OAAOI,MAAOT,GAAQA,EAAKoC,MAAQ,EAAI,CAAEL,OAAQ,QAAW,CAAC,GACxE,gBAAC,EAAAM,YAAD,CACIC,MAAK,aA8BLC,OAAQ,SAAAtC,GAAI,OACRA,EAAKuC,kBAAkBC,MAAMd,KAAI,SAAAe,GAC7B,IAAMC,EAAgBD,EAAKE,KAArBD,YACN,OACI,uBAAKd,IAAKc,EAAYrC,IAAKD,UAAU,YACjCI,MAAOT,GAAQA,EAAKoC,MAAQ,EAAI,CAAES,MAAO,QAAW,CAAC,GAErD,gBAAC9C,EAAD,CAAaC,KAAMA,EAAMC,KAAM0C,IAG1C,GAVO,KAgB/B,C","sources":["webpack://luca-pizzagalli-website/./src/pages/projects.js"],"sourcesContent":["import React from \"react\";\r\nimport { graphql, StaticQuery, Link } from 'gatsby'\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\r\n\r\nimport Layout from \"../components/layout\";\r\nimport Seo from \"../components/seo\";\r\n\r\n\r\nfunction ProjectCard({ loop, data }) {\r\n    let image = getImage(data.previewImage);\r\n    return (\r\n        <div className=\"card\">\r\n            {data.url === \"nope\" ?\r\n                loop ?\r\n                    <div onClick={() => loop.setUrl(\"/loop\")}\r\n                        style={{ textDecoration: \"underline\", color: \"#01ff70\", cursor: \"pointer\" }}\r\n                    >\r\n                        <GatsbyImage image={image} alt={data.altText} />\r\n                        <h2 className=\"card-title\"> {data.title} </h2>\r\n                    </div>\r\n                    :\r\n                    <Link to={\"/loop\"}>\r\n                        <GatsbyImage image={image} alt={data.altText} />\r\n                        <h2 className=\"card-title\"> {data.title} </h2>\r\n                    </Link>\r\n                :\r\n                data.staticLink ?\r\n                    <a href={data.url}>\r\n                        <GatsbyImage image={image} alt={data.altText} />\r\n                        <h2 className=\"card-title\"> {data.title} </h2>\r\n                    </a>\r\n                    :\r\n                    <Link to={data.url}>\r\n                        <GatsbyImage image={image} alt={data.altText} />\r\n                        <h2 className=\"card-title\"> {data.title} </h2>\r\n                    </Link>\r\n            }\r\n            <p style={{ flexGrow: 1 }}>{data.excerpt}</p>\r\n            <div style={{ display: \"flex\", flexWrap: \"wrap\", alignItems: \"center\" }}>\r\n                {data.technologies.map(tech => (<div key={tech} className=\"chip\" >{tech}</div>))}\r\n                <div key=\"empty\" style={{ flexGrow: 1 }}></div>\r\n                {data.github &&\r\n                    <a key=\"github\" href={data.github} style={{ margin: \"1rem\" }} >GitHub</a>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction ProjectsPage({ loop }) {\r\n    return (\r\n        <Layout loop={loop} location=\"/projects\">\r\n            <Seo title=\"Projects\" description=\"\" lang=\"en\" meta={[]} />\r\n            <h1>My projects</h1>\r\n            <p>Some of the projects for which I have a nice pic.</p>\r\n            <div className=\"grid\" style={loop && loop.level > 8 ? { margin: \"0rem\" } : {}}>\r\n                <StaticQuery\r\n                    query={graphql`\r\n                            query ProjectList {\r\n                            allMarkdownRemark(\r\n                              filter: {fileAbsolutePath: {regex: \"/(projects)/\"  }}\r\n                              sort: {order: DESC, fields: [frontmatter___order]}\r\n                            ) {\r\n                              edges {\r\n                                node {\r\n                                  frontmatter {\r\n                                    url\r\n                                    title\r\n                                    order\r\n                                    previewImage {\r\n                                      childImageSharp {\r\n                                        gatsbyImageData(\r\n                                          layout: FULL_WIDTH\r\n                                        )\r\n                                      }\r\n                                    }\r\n                                    altText\r\n                                    staticLink\r\n                                    excerpt\r\n                                    technologies\r\n                                    github\r\n                                  }\r\n                                }\r\n                              }\r\n                            } \r\n                          }\r\n                        `}\r\n                    render={data => (\r\n                        data.allMarkdownRemark.edges.map(edge => {\r\n                            let { frontmatter } = edge.node;\r\n                            return (\r\n                                <div key={frontmatter.url} className=\"grid-item\"\r\n                                    style={loop && loop.level > 8 ? { width: \"100%\" } : {}}\r\n                                >\r\n                                    <ProjectCard loop={loop} data={frontmatter} />\r\n                                </div>\r\n                            )\r\n                        })\r\n                    )}\r\n                />\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\n\r\nexport default ProjectsPage\r\n"],"names":["ProjectCard","loop","data","image","getImage","previewImage","className","url","onClick","setUrl","style","textDecoration","color","cursor","G","alt","altText","title","Link","to","staticLink","href","flexGrow","excerpt","display","flexWrap","alignItems","technologies","map","tech","key","github","margin","location","description","lang","meta","level","StaticQuery","query","render","allMarkdownRemark","edges","edge","frontmatter","node","width"],"sourceRoot":""}